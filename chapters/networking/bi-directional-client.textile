---
layout: recipe
title: Bi-Directional Client
chapter: Networking
---

h2. Problem

You want to access a service that provides a persistent connection over the network.


h2. Solution

Create a bi-directional TCP client.

h3. Node.js

{% highlight coffeescript %}
net = require 'net'

domain = 'localhost'
port = 9001

connection = net.createConnection port, domain
connection.setNoDelay true

connection.on 'connect', () ->
	console.log "Opened connection to #{domain}:#{port}."
	setTimeout((-> connection.write("Hello...", -> console.log "Data sent.")), 1000)
	setTimeout((-> connection.write("World!", -> console.log "Data sent.")), 3000)
	setTimeout((-> connection.write("quit", -> console.log "Data sent.")), 5000)

connection.on 'data', (data) ->
	console.log "Received: #{data}"

connection.on 'end', (data) ->
	process.exit()
{% endhighlight %}

h3. Example Usage

Accessing the <a href="/chapters/networking/basic-server.html">Basic Server</a>:

_$ coffee basic-client.coffee_
Opened connection to localhost:9001
Received: Hello, World!

h2. Discussion

See also the <a href="/chapters/networking/basic-server.html">Basic Server</a>, the <a href="/chapters/networking/bi-directional-client.html">Bi-Directional Client</a>, and the <a href="/chapters/networking/bi-directional-server.html">Bi-Directional Server recipes</a>.
